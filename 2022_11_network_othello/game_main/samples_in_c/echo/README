これは何？
=========

echoサーバとそのクライアントの実装．
echoサーバは送られてきたデータをそのままクライアントに返す．

  * echo_client.c          echoクライアントの実装
  * echo_server.c          echoサーバの実装
  * echo_server_pthread.c  echoサーバのよりよい実装（pthreadを利用）

ビルド方法
----------

   $ make 
   
すると，`echo_client`と`echo_server`と`echo_server_pthread`という実行
可能形式が得られる．

使い方
------

ひとつの端末で

   $ ./echo_server PORT

とする．PORTは1024以上，65535以下ならば何でもよい．

別の端末で
  
   $ telnet localhost PORT

として，適当に文字を打ってリターンを押してみる．ここでPORTは上で指定したポート番号．終了するにはCtrl+Dを入力．

また，

   $ ./echo_client localhost PORT

として，適当に文字を打ってリターンを押してみる．終了するにはCtrl+Dを入力．

他のマシンで動いているサーバと通信するには，localhostの代わりに

   $ ./echo_client HOST POST

とする．ここで，HOSTは通信先のホスト名もしくはIPアドレスである．


改良点
------

このサーバは一つのクライアントとしか通信できない．（正確には，サーバに
接続はできるものの，既に応答しているクライントとの接続が閉じられるまで
は，サーバが応答してくれない）．確かめてみよ．

この問題を解決するには，pthreadもしくはforkを用いること．
`echo_server_pthread.c`はpthreadを利用した実装である．

